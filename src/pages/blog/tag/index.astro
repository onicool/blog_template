---
import { siteConfig } from '../../../config/site';
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { getTagCounts, categorizeTags } from '../../../utils/tagUtils';

const posts = await getCollection('blog');
// すべてのタグを収集
const allTags = [...new Set(posts.flatMap(post => post.data.tags))];
// タグごとの記事数を計算
const tagCounts = getTagCounts(posts);
// タグをカテゴリー別に整理
const categorizedTags = categorizeTags(allTags, tagCounts);
---

<Layout title={siteConfig.pages.blog.title}>
  <h2 class="heading">タグ一覧</h2>

  <div class="space-y-12">
    {categorizedTags.map(({ category, tags }) => (
      <section class="thin_box">
        <h3 class="font-cyber text-2xl text-cyber-secondary mb-6">{category}</h3>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          {tags.map(tag => (
            <a
              href={`/blog/tag/${tag}`}
              class="group thin_box"
            >
              <div class="flex items-center justify-between">
                <span class="font-cyber text-cyber-primary group-hover:text-cyber-secondary transition-colors">
                  #{tag}
                </span>
                <span class="text-gray-400 text-sm">
                  {tagCounts[tag]}件の記事
                </span>
              </div>
            </a>
          ))}
        </div>
      </section>
    ))}
  </div>

  <div class="mt-12 pt-8 border-t border-cyber-primary">
    <a
      href="/blog"
      class="inline-flex items-center font-cyber text-cyber-primary hover:text-cyber-secondary transition-colors"
    >
      <span class="mr-2">←</span>
      記事一覧に戻る
    </a>
  </div>
</Layout>