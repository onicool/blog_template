---
// Search.astro
interface Props {
  initialQuery?: string;
}

const { initialQuery = '' } = Astro.props;
---

<div>
  <h2 class="font-cyber text-xl text-cyber-secondary mb-4">検索</h2>
  <div class="search-container">
    <form 
      action="/blog/search" 
      method="get" 
      id="searchForm" 
      class="relative"
    >
      <input
        type="search"
        id="searchInput"
        name="q"
        placeholder="記事を検索..."
        value={initialQuery}
        class="w-full px-4 py-2 pl-10 pr-10 rounded-lg border focus:outline-none focus:border-blue-500"
      />
      <div class="search-icon absolute left-3 top-1/2 -translate-y-1/2 text-gray-400">
        <svg viewBox="0 0 24 24" width="20" height="20" stroke="currentColor" fill="none" stroke-width="2">
          <circle cx="11" cy="11" r="8"></circle>
          <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
        </svg>
      </div>
      <button
        type="button"
        id="clearSearchButton"
        class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600"
        style="display: none;"
      >
        <svg viewBox="0 0 24 24" width="20" height="20" stroke="currentColor" fill="none" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </form>
  </div>
  <div id="searchInfo" class="mt-4 text-cyber-secondary font-cyber hidden"></div>
</div>

<script>
  const searchForm = document.getElementById('searchForm') as HTMLFormElement;
  const searchInput = document.getElementById('searchInput') as HTMLInputElement;
  const clearButton = document.getElementById('clearSearchButton') as HTMLButtonElement;

  // Clear button visibility
  function updateClearButtonVisibility() {
    clearButton.style.display = searchInput.value ? 'block' : 'none';
  }

  // Initialize clear button visibility
  updateClearButtonVisibility();

  // Clear button handler
  clearButton?.addEventListener('click', () => {
    searchInput.value = '';
    updateClearButtonVisibility();
    searchInput.focus();
  });

  // Input handler for clear button visibility
  searchInput?.addEventListener('input', updateClearButtonVisibility);

  // Form submission handler
  searchForm?.addEventListener('submit', (e) => {
    e.preventDefault();
    const query = searchInput.value.trim();
    
    if (query) {
      window.location.href = `/blog/search?q=${encodeURIComponent(query)}`;
    }
  });
</script>

<style>
  /* Existing styles remain the same */
</style>