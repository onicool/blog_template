---
import { categorizeTags, getTagCounts } from '../utils/tagUtils';
interface Props {
    tags: string[];
    currentTag?: string;
    showCount?: boolean;
}

const { tags, currentTag, showCount = false } = Astro.props;

// もし showCount が true の場合、タグの出現回数を計算
const tagCounts = showCount ? getTagCounts([{ data: { tags } }]) : undefined;

// categorizeTags 関数を使用してタグを分類
const categorizedTags = categorizeTags(tags, tagCounts);
---

<div>
    <div class="flex justify-between items-center mb-4">
        <h2 class="font-cyber text-xl text-cyber-secondary">タグ</h2>
        <a
            href="/blog/tag"
            class="text-sm text-cyber-primary hover:text-cyber-secondary transition-colors"
        >
            すべて表示 →
        </a>
    </div>

    {categorizedTags.map(({ category, tags }) => (
        <div class="mb-4">
            <h3 class="font-cyber text-cyber-secondary text-sm mb-2">{category}</h3>
            <div class="flex flex-wrap gap-2">
                {tags.map(tag => (
                    <a
                        href={`/blog/tag/${tag}`}
                        class={`px-3 py-1 rounded-full text-sm transition-colors ${
                            currentTag === tag
                                ? 'bg-cyber-primary text-cyber-dark'
                                : 'bg-cyber-dark border border-cyber-primary text-cyber-primary hover:border-cyber-secondary hover:text-cyber-secondary'
                        }`}
                    >
                        #{tag}
                    </a>
                ))}
            </div>
        </div>
    ))}
</div>