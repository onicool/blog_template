---
import Layout from './Layout.astro';
import TableOfContents from '../components/TableOfContents.astro';
import RelatedPosts from '../components/RelatedPosts.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  post: CollectionEntry<'blog'>;
  headings: {
    depth: number;
    slug: string;
    text: string;
  }[];
}

const { post, headings } = Astro.props;
const { title, description, pubDate, updatedDate, tags } = post.data;
---

<Layout
  title={title}
  description={description}
  article={true}
  publishedTime={pubDate}
  modifiedTime={updatedDate}
  tags={tags}
>
  <article class="max-w-4xl mx-auto">
    <div class="mb-8">
      <h1 class="font-cyber text-4xl text-cyber-primary mb-4">{title}</h1>
      <p class="text-gray-300 mb-4">{description}</p>
      <div class="flex justify-between items-center">
        <div class="flex gap-2">
          {tags.map(tag => (
            <a
              href={`/blog#${tag}`}
              class="text-sm px-3 py-1 rounded-full bg-cyber-dark border border-cyber-primary text-cyber-primary hover:border-cyber-secondary hover:text-cyber-secondary transition-colors"
              data-tag={tag}
            >
              #{tag}
            </a>
          ))}
        </div>
        <div class="text-right">
          <time class="text-gray-400 block">
            公開: {pubDate.toLocaleDateString('ja-JP')}
          </time>
          {updatedDate && (
            <time class="text-cyber-secondary block">
              更新: {updatedDate.toLocaleDateString('ja-JP')}
            </time>
          )}
        </div>
      </div>
    </div>

    <div class="lg:grid lg:grid-cols-[1fr_250px] lg:gap-8">
      <div class="prose prose-invert max-w-none">
        <slot />
        <RelatedPosts currentPost={post} />
      </div>
      
      <aside class="hidden lg:block">
        <TableOfContents headings={headings} />
      </aside>
    </div>

    <div class="mt-12 pt-8 border-t border-cyber-primary">
      <a
        href="/blog"
        class="inline-flex items-center font-cyber text-cyber-primary hover:text-cyber-secondary transition-colors"
      >
        <span class="mr-2">←</span>
        記事一覧に戻る
      </a>
    </div>
  </article>
</Layout>

<script>
  function initTagLinks() {
    const tagLinks = document.querySelectorAll('[data-tag]');
    
    tagLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const tag = link.getAttribute('data-tag');
        if (!tag) return;

        // 選択されたタグをセッションストレージに保存
        sessionStorage.setItem('selectedTag', tag);
        
        // ブログページにハッシュ付きで遷移
        window.location.href = `/blog/tag/#${tag}`;
      });
    });
  }

  // 初期化
  initTagLinks();
  document.addEventListener('astro:page-load', initTagLinks);
</script>

<style>
  .prose {
    --tw-prose-invert-headings: theme(colors.cyber.primary);
    --tw-prose-invert-links: theme(colors.cyber.secondary);
    --tw-prose-invert-pre-bg: theme(colors.cyber.dark);
  }
  
  .prose pre {
    border: 1px solid theme(colors.cyber.primary);
    border-radius: 0.5rem;
  }
</style>