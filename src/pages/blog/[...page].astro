---
import Layout from '../../layouts/Layout.astro';
import BlogCard from '../../components/BlogCard.astro';
import Search from '../../components/Search.astro';
import TagsFilter from '../../components/TagsFilter.astro';
import Pagination from '../../components/Pagination.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths({ paginate }) {
  const posts = (await getCollection('blog')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;
// クライアントサイドでのみ実行されるスクリプトで取得するため、ここでは空文字を渡す
const selectedTag = '';
---

<Layout title="Blog">
  <div class="grid grid-cols-[1fr_300px] gap-8">
    <main>
      <div id="posts-container">
        {page.data.map(post => (
          <BlogCard
            title={post.data.title}
            description={post.data.description}
            pubDate={post.data.pubDate}
            updatedDate={post.data.updatedDate}
            tags={post.data.tags}
            url={`/blog/${post.slug}`}
          />
        ))}
      </div>

      <Pagination
        currentPage={page.currentPage}
        totalPages={page.lastPage}
        baseUrl="/blog"
      />
    </main>

    <aside class="space-y-8">
      <div class="bg-cyber-light p-6 rounded-lg border border-cyber-primary">
        <Search />
      </div>

      <div class="bg-cyber-light p-6 rounded-lg border border-cyber-primary">
        <TagsFilter selectedTag={selectedTag} />
      </div>
    </aside>
  </div>
</Layout>

<script>
  function handleTagFilter() {
    const tag = window.location.hash.slice(1);
    
    if (tag) {
      sessionStorage.setItem('selectedTag', tag);
      const posts = document.querySelectorAll('#posts-container .block.group');
      
      posts.forEach(post => {
        const postTags = Array.from(post.querySelectorAll('[data-post-tag]'))
          .map(tag => tag.getAttribute('data-post-tag'));
        
        if (!postTags.includes(tag)) {
          post.style.display = 'none';
        } else {
          post.style.display = 'block';
        }
      });
    } else {
      sessionStorage.removeItem('selectedTag');
      // タグが選択されていない場合は全ての記事を表示
      const posts = document.querySelectorAll('#posts-container .block.group');
      posts.forEach(post => {
        post.style.display = 'block';
      });
    }
  }

  // 初期化時とページ遷移時に実行
  handleTagFilter();
  document.addEventListener('astro:page-load', handleTagFilter);
  
  // ハッシュ変更時にも実行
  window.addEventListener('hashchange', handleTagFilter);
</script>