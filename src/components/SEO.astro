---
interface Props {
  title: string;
  description: string;
  image?: string;
  article?: boolean;
  publishedTime?: Date;
  modifiedTime?: Date;
  tags?: string[];
}

const {
  title,
  description,
  image = '/og-image.png',
  article = false,
  publishedTime,
  modifiedTime,
  tags
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const siteName = 'メモログ';
---

<!-- Primary Meta Tags -->
<title>{title} | {siteName}</title>
<meta name="title" content={`${title} | ${siteName}`} />
<meta name="description" content={description} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={article ? 'article' : 'website'} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={`${title} | ${siteName}`} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.site)} />
<meta property="og:site_name" content={siteName} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={`${title} | ${siteName}`} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.site)} />

{article && publishedTime && (
  <meta property="article:published_time" content={publishedTime.toISOString()} />
)}
{article && modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime.toISOString()} />
)}
{article && tags && tags.map(tag => (
  <meta property="article:tag" content={tag} />
))}

<!-- Additional Meta Tags -->
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />
<meta name="theme-color" content="#00ff9f" />